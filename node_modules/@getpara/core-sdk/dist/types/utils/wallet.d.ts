import { CurrentWalletIds, SupportedWalletTypes, TPregenIdentifierType, WalletEntity, TWalletScheme, TWalletType } from '@getpara/user-management-client';
import { Wallet } from '../types/index.js';
export declare const WalletSchemeTypeMap: Record<TWalletScheme, Partial<Record<TWalletType, true>>>;
export declare function isPregenIdentifierMatch(a: string | null | undefined, b: string | null | undefined, type: TPregenIdentifierType): boolean;
export declare function isWalletSupported(types: TWalletType[], wallet: Omit<Wallet, 'signer'>): boolean;
export declare function getSchemes(types: TWalletType[] | SupportedWalletTypes): TWalletScheme[];
export declare function getWalletTypes(schemes: TWalletScheme[]): TWalletType[];
export declare function getEquivalentTypes(types: TWalletType[] | TWalletType): TWalletType[];
export declare function entityToWallet(w: WalletEntity): Omit<Wallet, 'signer'>;
export declare function migrateWallet(obj: Record<string, unknown>): Wallet;
export declare function supportedWalletTypesEq(a: SupportedWalletTypes, b: SupportedWalletTypes): boolean;
export declare function mergeCurrentWalletIds(original: CurrentWalletIds, additional: CurrentWalletIds): CurrentWalletIds;
export declare function newUuid(): string;

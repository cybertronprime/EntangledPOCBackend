var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var ServerLocalStorage_exports = {};
__export(ServerLocalStorage_exports, {
  ServerLocalStorage: () => ServerLocalStorage
});
module.exports = __toCommonJS(ServerLocalStorage_exports);
class ServerLocalStorage {
  constructor() {
    this.localStorage = {};
    this.get = (key) => {
      return this.localStorage[key] || null;
    };
    this.set = (key, value) => {
      this.localStorage[key] = value;
    };
    this.removeItem = (key) => {
      delete this.localStorage[key];
    };
    this.clear = (prefix) => {
      const keys = Object.keys(this.localStorage);
      for (const key of keys) {
        if (key && key.startsWith(prefix)) {
          this.removeItem(key);
        }
      }
    };
  }
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ServerLocalStorage
});

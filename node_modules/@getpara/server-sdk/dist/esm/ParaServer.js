import "./chunk-FTA5RKYX.js";
import ParaCore from "@getpara/core-sdk";
import { ServerUtils } from "./ServerUtils.js";
class Para extends ParaCore {
  constructor(envOrApiKey, apiKeyOrOpts, opts) {
    super(envOrApiKey, apiKeyOrOpts, opts);
  }
  async ready() {
    this.isReady = true;
  }
  getPlatformUtils() {
    return new ServerUtils();
  }
  async isPasskeySupported() {
    return false;
  }
  /**
   * Claims a pregenerated wallet.
   *
   * NOTE: This function is only available on the client side.
   * When called from the server SDK, it throws an error.
   *
   * @param {Object} opts the options object.
   * @param {string} opts.pregenIdentifier - the identifier of the user claiming the wallet.
   * @param {TPregenIdentifierType} opts.pregenIdentifierType - the type of the identifier.
   * @returns {Promise<string | undefined>} A promise that rejects with an error.
   */
  async claimPregenWallets(_) {
    throw new Error(
      "claimPregenWallets is not available in the server SDK. This function is only supported on the client side. Please ensure you are using the client SDK to call this method."
    );
  }
}
export {
  Para
};

import ParaCore, { PlatformUtils, ConstructorOpts, Environment, CoreMethodParams, CoreMethodResponse } from '@getpara/core-sdk';
export declare class Para extends ParaCore {
    constructor(env: Environment | undefined, apiKey: string, opts?: ConstructorOpts);
    constructor(apiKey: string, opts?: ConstructorOpts);
    ready(): Promise<void>;
    protected getPlatformUtils(): PlatformUtils;
    isPasskeySupported(): Promise<boolean>;
    /**
     * Claims a pregenerated wallet.
     *
     * NOTE: This function is only available on the client side.
     * When called from the server SDK, it throws an error.
     *
     * @param {Object} opts the options object.
     * @param {string} opts.pregenIdentifier - the identifier of the user claiming the wallet.
     * @param {TPregenIdentifierType} opts.pregenIdentifierType - the type of the identifier.
     * @returns {Promise<string | undefined>} A promise that rejects with an error.
     */
    claimPregenWallets(_: CoreMethodParams<'claimPregenWallets'>): CoreMethodResponse<'claimPregenWallets'>;
}

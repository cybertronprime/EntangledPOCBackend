var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var wallet_exports = {};
__export(wallet_exports, {
  COSMOS_WALLETS: () => COSMOS_WALLETS,
  Chain: () => Chain,
  EVM_WALLETS: () => EVM_WALLETS,
  EXTERNAL_WALLET_TYPES: () => EXTERNAL_WALLET_TYPES,
  NON_ED25519: () => NON_ED25519,
  Network: () => Network,
  PREGEN_IDENTIFIER_TYPES: () => PREGEN_IDENTIFIER_TYPES,
  SOLANA_WALLETS: () => SOLANA_WALLETS,
  WALLET_SCHEMES: () => WALLET_SCHEMES,
  WALLET_TYPES: () => WALLET_TYPES,
  WalletScheme: () => WalletScheme,
  WalletType: () => WalletType
});
module.exports = __toCommonJS(wallet_exports);
var WalletScheme = /* @__PURE__ */ ((WalletScheme2) => {
  WalletScheme2["DKLS"] = "DKLS";
  WalletScheme2["CGGMP"] = "CGGMP";
  WalletScheme2["ED25519"] = "ED25519";
  return WalletScheme2;
})(WalletScheme || {});
const WALLET_SCHEMES = ["DKLS", "CGGMP", "ED25519"];
var WalletType = /* @__PURE__ */ ((WalletType2) => {
  WalletType2["EVM"] = "EVM";
  WalletType2["SOLANA"] = "SOLANA";
  WalletType2["COSMOS"] = "COSMOS";
  return WalletType2;
})(WalletType || {});
const WALLET_TYPES = ["EVM", "SOLANA", "COSMOS"];
var Chain = /* @__PURE__ */ ((Chain2) => {
  Chain2["ETH"] = "ETH";
  Chain2["CELO"] = "CELO";
  Chain2["MATIC"] = "MATIC";
  return Chain2;
})(Chain || {});
var Network = /* @__PURE__ */ ((Network2) => {
  Network2["ETHEREUM"] = "ETHEREUM";
  Network2["SEPOLIA"] = "SEPOLIA";
  Network2["ARBITRUM"] = "ARBITRUM";
  Network2["BASE"] = "BASE";
  Network2["OPTIMISM"] = "OPTIMISM";
  Network2["POLYGON"] = "POLYGON";
  Network2["SOLANA"] = "SOLANA";
  Network2["COSMOS"] = "COSMOS";
  Network2["CELO"] = "CELO";
  Network2["NOBLE"] = "NOBLE";
  Network2["SOLANA_DEVNET"] = "SOLANA_DEVNET";
  Network2["BERACHAIN"] = "BERACHAIN";
  return Network2;
})(Network || {});
const PREGEN_IDENTIFIER_TYPES = [
  "EMAIL",
  "PHONE",
  "CUSTOM_ID",
  "GUEST_ID",
  "DISCORD",
  "TWITTER",
  "TELEGRAM",
  "FARCASTER"
];
const NON_ED25519 = ["DKLS", "CGGMP"];
const EVM_WALLETS = [
  "METAMASK",
  "RAINBOW",
  "COINBASE",
  "WALLETCONNECT",
  "FARCASTER",
  "ZERION",
  "SAFE",
  "RABBY",
  "OKX",
  "HAHA",
  "BACKPACK",
  "PHANTOM",
  "VALORA"
];
const SOLANA_WALLETS = ["PHANTOM", "GLOW", "BACKPACK", "SOLFLARE"];
const COSMOS_WALLETS = ["KEPLR", "LEAP", "COSMOSTATION"];
const EXTERNAL_WALLET_TYPES = [.../* @__PURE__ */ new Set([...EVM_WALLETS, ...SOLANA_WALLETS, ...COSMOS_WALLETS])];
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  COSMOS_WALLETS,
  Chain,
  EVM_WALLETS,
  EXTERNAL_WALLET_TYPES,
  NON_ED25519,
  Network,
  PREGEN_IDENTIFIER_TYPES,
  SOLANA_WALLETS,
  WALLET_SCHEMES,
  WALLET_TYPES,
  WalletScheme,
  WalletType
});

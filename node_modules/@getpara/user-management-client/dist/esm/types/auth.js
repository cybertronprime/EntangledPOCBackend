import "../chunk-BBZEL7EG.js";
const AUTH_TYPES = [
  "email",
  "phone",
  "phoneLegacy",
  "farcaster",
  "telegram",
  "userId",
  "externalWallet",
  "discord",
  "x",
  "customId",
  "guestId"
];
var EncryptorType = /* @__PURE__ */ ((EncryptorType2) => {
  EncryptorType2["USER"] = "USER";
  EncryptorType2["RECOVERY"] = "RECOVERY";
  EncryptorType2["BIOMETRICS"] = "BIOMETRICS";
  EncryptorType2["PASSWORD"] = "PASSWORD";
  return EncryptorType2;
})(EncryptorType || {});
var KeyShareType = /* @__PURE__ */ ((KeyShareType2) => {
  KeyShareType2["USER"] = "USER";
  KeyShareType2["RECOVERY"] = "RECOVERY";
  return KeyShareType2;
})(KeyShareType || {});
var PasswordStatus = /* @__PURE__ */ ((PasswordStatus2) => {
  PasswordStatus2["PENDING"] = "PENDING";
  PasswordStatus2["COMPLETE"] = "COMPLETE";
  return PasswordStatus2;
})(PasswordStatus || {});
var PublicKeyStatus = /* @__PURE__ */ ((PublicKeyStatus2) => {
  PublicKeyStatus2["PENDING"] = "PENDING";
  PublicKeyStatus2["COMPLETE"] = "COMPLETE";
  return PublicKeyStatus2;
})(PublicKeyStatus || {});
var PublicKeyType = /* @__PURE__ */ ((PublicKeyType2) => {
  PublicKeyType2["MOBILE"] = "MOBILE";
  PublicKeyType2["WEB"] = "WEB";
  return PublicKeyType2;
})(PublicKeyType || {});
var OAuthMethod = /* @__PURE__ */ ((OAuthMethod2) => {
  OAuthMethod2["GOOGLE"] = "GOOGLE";
  OAuthMethod2["TWITTER"] = "TWITTER";
  OAuthMethod2["APPLE"] = "APPLE";
  OAuthMethod2["DISCORD"] = "DISCORD";
  OAuthMethod2["FACEBOOK"] = "FACEBOOK";
  OAuthMethod2["FARCASTER"] = "FARCASTER";
  OAuthMethod2["TELEGRAM"] = "TELEGRAM";
  return OAuthMethod2;
})(OAuthMethod || {});
const OAUTH_METHODS = ["GOOGLE", "TWITTER", "APPLE", "DISCORD", "FACEBOOK", "FARCASTER", "TELEGRAM"];
const LINKED_ACCOUNT_TYPES = [
  "EMAIL",
  "PHONE",
  "GOOGLE",
  "FACEBOOK",
  "APPLE",
  "TWITTER",
  "DISCORD",
  "TELEGRAM",
  "FARCASTER",
  "EXTERNAL_WALLET"
];
var AuthMethod = /* @__PURE__ */ ((AuthMethod2) => {
  AuthMethod2["PASSWORD"] = "PASSWORD";
  AuthMethod2["PASSKEY"] = "PASSKEY";
  AuthMethod2["PIN"] = "PIN";
  return AuthMethod2;
})(AuthMethod || {});
var LegacyAuthMethod = /* @__PURE__ */ ((LegacyAuthMethod2) => {
  LegacyAuthMethod2["PASSWORD"] = "PASSWORD";
  LegacyAuthMethod2["BIOMETRIC"] = "BIOMETRIC";
  return LegacyAuthMethod2;
})(LegacyAuthMethod || {});
export {
  AUTH_TYPES,
  AuthMethod,
  EncryptorType,
  KeyShareType,
  LINKED_ACCOUNT_TYPES,
  LegacyAuthMethod,
  OAUTH_METHODS,
  OAuthMethod,
  PasswordStatus,
  PublicKeyStatus,
  PublicKeyType
};
